services:
  # Service Discovery (Eureka Server)
  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bank-network
    restart: unless-stopped

  # PostgreSQL Database Services
  postgres-customer:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=customer_user
      - POSTGRES_PASSWORD=customer_pass
      - POSTGRES_DB=customer_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-customer-data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U customer_user -d customer_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres-account:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=account_user
      - POSTGRES_PASSWORD=account_pass
      - POSTGRES_DB=account_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-account-data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U account_user -d account_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres-card:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=card_user
      - POSTGRES_PASSWORD=card_pass
      - POSTGRES_DB=card_db
    ports:
      - "5434:5432"
    volumes:
      - postgres-card-data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U card_user -d card_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Microservices
  customer-service:
    build:
      context: .
      dockerfile: customer-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres-customer:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-customer:5432/customer_db
      - SPRING_DATASOURCE_USERNAME=customer_user
      - SPRING_DATASOURCE_PASSWORD=customer_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://customer-service:8081/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  account-service:
    build:
      context: .
      dockerfile: account-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres-account:
        condition: service_healthy
      customer-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-account:5432/account_db
      - SPRING_DATASOURCE_USERNAME=account_user
      - SPRING_DATASOURCE_PASSWORD=account_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CUSTOMER_SERVICE_URL=http://customer-service:8081
      - CARD_SERVICE_URL=http://card-service:8083
    ports:
      - "8082:8082"
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://account-service:8082/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  card-service:
    build:
      context: .
      dockerfile: card-service/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres-card:
        condition: service_healthy
      account-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-card:5432/card_db
      - SPRING_DATASOURCE_USERNAME=card_user
      - SPRING_DATASOURCE_PASSWORD=card_pass
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - ACCOUNT_SERVICE_URL=http://account-service:8082
    ports:
      - "8083:8083"
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://card-service:8083/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  gateway-server:
    build:
      context: .
      dockerfile: gateway-server/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
      customer-service:
        condition: service_healthy
      account-service:
        condition: service_healthy
      card-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://gateway-server:8080/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  bank-network:
    driver: bridge

volumes:
  postgres-customer-data:
  postgres-account-data:
  postgres-card-data: